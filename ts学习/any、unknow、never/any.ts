//any 类型表示没有任何限制，该类型的变量可以赋予任意类型的值。
//它是ts的顶层类型，就是所有类型中都不包含它
let number: any = 1
number = '你的电话号码'//你们看没有报错，说明这个数据类型的变量可以赋予任何类型的值。
number = true
number = [1, 2, 3, 4]//像我们写js一样，好像没有数据类型
//但是我们用ts的目的就是为了类型判断，所以尽量不要用any类型，但是不是不能用any类型。


//设置为any就关闭了类型判断，不会出现类型报错，但是会出现数据污染的问题
let x: any = 1
x(1);
x.foo();


//污染问题 any关闭了类型怕判断，也会导致对其他的变量也会判断不出类型，造成污染
let A: any = 'LI'
let B: number;
B = A;
B * 123;
//但是调换顺序会报错，也就是any类型赋值给其他类型就会把其他类型变成any


//类型判断问题
//如果没有显式的声明类型，ts会进行类型判断，没有判断出来就是any类型

function add(x, y) {
    return x + y
}
add('134', 1)
//判断为any类型时，直接报错。

